type Todo @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  imageUri: String
  chatRoomUser: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
  publicKey: String
}

type ChatRoomUser @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID", "chatRoomID"]) @key(name: "byChatRoom", fields: ["chatRoomID", "userID"]) {
  id: ID!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  messages: [Message] @connection(keyName: "byChatRoom", fields: ["id"])
  lastMessageID: ID!
  lastMessage: Message @connection(fields: ["lastMessageID"])
  untitledfield: String
}

type Message @model @auth(rules: [{allow: public}]) @key(name: "byChatRoom", fields: ["chatRoomID", "createdAt"], queryField: "messagesByChatRoom") {
  id: ID!
  createdAt: String!
  content: String!
  userID: ID!
  chatRoomID: ID!
  image: String
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
  forUserId: ID
  permissionToShareFile: String
  requested: String
}
 